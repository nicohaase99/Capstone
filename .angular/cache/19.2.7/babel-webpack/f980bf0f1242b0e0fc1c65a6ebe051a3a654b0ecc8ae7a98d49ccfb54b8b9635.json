{"ast":null,"code":"import { FormControl, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared-data.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ClientListComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ClientListComponent {\n  router;\n  sharedDataService;\n  form;\n  fullName = 'John Doe';\n  email = 'email@email.com';\n  phone = '1234567890';\n  password = 'password';\n  confirmPassword = 'password';\n  address = '123 Main St';\n  city = 'Los Angeles';\n  state = 'California';\n  zip = '12345';\n  // Define the form group and its controls\n  constructor(router, sharedDataService) {\n    this.router = router;\n    this.sharedDataService = sharedDataService;\n    // Initialize the form with controls and validators\n    this.form = new FormGroup({\n      fullName: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      phone: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{10}$')]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('', Validators.required),\n      zip: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{5}$')])\n    }, {\n      validators: this.passwordMatchValidator\n    } // Attach the custom validator\n    );\n  }\n  // Custom validator to check if password and confirm password match\n  passwordMatchValidator(control) {\n    const password = control.get('password')?.value;\n    const confirmPassword = control.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : {\n      mismatch: true\n    };\n  }\n  // Method to navigate to the SchedulingComponent with form data\n  navigateToScheduling() {\n    if (this.form.valid) {\n      this.router.navigate(['/scheduling'], {\n        state: {\n          data: this.form.value\n        }\n      });\n    } else {\n      console.log('Form is invalid. Please correct the errors.');\n    }\n  }\n  // Method to handle form submission\n  onSubmit() {\n    if (this.form.valid) {\n      this.sharedDataService.setClientData(this.form.value); // Store client data\n      this.router.navigate(['/scheduling']); // Navigate to SchedulingComponent\n    } else {\n      console.log('Form is invalid. Please correct the errors.');\n    }\n  }\n  static ɵfac = function ClientListComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ClientListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SharedDataService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientListComponent,\n    selectors: [[\"app-client-list\"]],\n    decls: 147,\n    vars: 2,\n    consts: [[3, \"ngSubmit\", \"formGroup\"], [1, \"container\", \"mt-5\"], [1, \"mt-6\"], [1, \"row\", \"g-3\"], [1, \"col-mt-6\"], [\"for\", \"fullName\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"fullName\", \"id\", \"fullName\", \"placeholder\", \"Your full name\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"youremail@email.com\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"number\", \"formControlName\", \"phone\", \"id\", \"phone\", \"placeholder\", \"123-456-7890\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"id\", \"confirmPassword\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"col-mt-12\"], [\"for\", \"address\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"address\", \"id\", \"address\", \"placeholder\", \"1234 Main St\", 1, \"form-control\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"city\", \"id\", \"city\", \"placeholder\", \"Your city\", 1, \"form-control\"], [\"for\", \"state\", 1, \"form-label\"], [\"id\", \"state\", \"formControlName\", \"state\", 1, \"form-select\"], [\"selected\", \"\"], [\"for\", \"zip\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"zip\", \"id\", \"zip\", \"placeholder\", \"12345\", 1, \"form-control\"], [1, \"col-mt-6\", \"center-button\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n    template: function ClientListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ClientListComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Client Form:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h4\", 2);\n        i0.ɵɵtext(5, \"Please fill out the form below and press submit:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Full Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Phone number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n        i0.ɵɵtext(21, \"Enter a password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Confirm your password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, ClientListComponent_div_27_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementStart(28, \"div\", 16)(29, \"label\", 17);\n        i0.ɵɵtext(30, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 4)(33, \"label\", 19);\n        i0.ɵɵtext(34, \"City:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 4)(37, \"label\", 21);\n        i0.ɵɵtext(38, \"State:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"select\", 22)(40, \"option\", 23);\n        i0.ɵɵtext(41, \"California\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"option\");\n        i0.ɵɵtext(43, \"Alabama\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"option\");\n        i0.ɵɵtext(45, \"Alaska\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"option\");\n        i0.ɵɵtext(47, \"Arizona\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"option\");\n        i0.ɵɵtext(49, \"Arkansas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"option\");\n        i0.ɵɵtext(51, \"Colorado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\");\n        i0.ɵɵtext(53, \"Connecticut\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"option\");\n        i0.ɵɵtext(55, \"Delaware\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"option\");\n        i0.ɵɵtext(57, \"Florida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"option\");\n        i0.ɵɵtext(59, \"Georgia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"option\");\n        i0.ɵɵtext(61, \"Hawaii\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"option\");\n        i0.ɵɵtext(63, \"Idaho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"option\");\n        i0.ɵɵtext(65, \"Illinois\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"option\");\n        i0.ɵɵtext(67, \"Indiana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"option\");\n        i0.ɵɵtext(69, \"Iowa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"option\");\n        i0.ɵɵtext(71, \"Kansas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"option\");\n        i0.ɵɵtext(73, \"Kentucky\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"option\");\n        i0.ɵɵtext(75, \"Louisiana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"option\");\n        i0.ɵɵtext(77, \"Maine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"option\");\n        i0.ɵɵtext(79, \"Maryland\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"option\");\n        i0.ɵɵtext(81, \"Massachusetts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"option\");\n        i0.ɵɵtext(83, \"Michigan\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"option\");\n        i0.ɵɵtext(85, \"Minnesota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"option\");\n        i0.ɵɵtext(87, \"Mississippi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"option\");\n        i0.ɵɵtext(89, \"Missouri\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"option\");\n        i0.ɵɵtext(91, \"Montana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"option\");\n        i0.ɵɵtext(93, \"Nebraska\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"option\");\n        i0.ɵɵtext(95, \"Nevada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(96, \"option\");\n        i0.ɵɵtext(97, \"New Hampshire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(98, \"option\");\n        i0.ɵɵtext(99, \"New Jersey\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"option\");\n        i0.ɵɵtext(101, \"New Mexico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(102, \"option\");\n        i0.ɵɵtext(103, \"New York\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(104, \"option\");\n        i0.ɵɵtext(105, \"North Carolina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(106, \"option\");\n        i0.ɵɵtext(107, \"North Dakota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(108, \"option\");\n        i0.ɵɵtext(109, \"Ohio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(110, \"option\");\n        i0.ɵɵtext(111, \"Oklahoma\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(112, \"option\");\n        i0.ɵɵtext(113, \"Oregon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"option\");\n        i0.ɵɵtext(115, \"Pennsylvania\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(116, \"option\");\n        i0.ɵɵtext(117, \"Rhode Island\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"option\");\n        i0.ɵɵtext(119, \"South Carolina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"option\");\n        i0.ɵɵtext(121, \"South Dakota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(122, \"option\");\n        i0.ɵɵtext(123, \"Tennessee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(124, \"option\");\n        i0.ɵɵtext(125, \"Texas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"option\");\n        i0.ɵɵtext(127, \"Utah\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(128, \"option\");\n        i0.ɵɵtext(129, \"Vermont\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(130, \"option\");\n        i0.ɵɵtext(131, \"Virginia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(132, \"option\");\n        i0.ɵɵtext(133, \"Washington\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"option\");\n        i0.ɵɵtext(135, \"West Virginia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(136, \"option\");\n        i0.ɵɵtext(137, \"Wisconsin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(138, \"option\");\n        i0.ɵɵtext(139, \"Wyoming\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(140, \"div\", 4)(141, \"label\", 24);\n        i0.ɵɵtext(142, \"Zip:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(143, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(144, \"div\", 26)(145, \"button\", 27);\n        i0.ɵɵtext(146, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngIf\", (ctx.form.errors == null ? null : ctx.form.errors[\"mismatch\"]) && ctx.form.touched);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, ReactiveFormsModule, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","ReactiveFormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ClientListComponent","router","sharedDataService","form","fullName","email","phone","password","confirmPassword","address","city","state","zip","constructor","required","pattern","minLength","validators","passwordMatchValidator","control","get","value","mismatch","navigateToScheduling","valid","navigate","data","console","log","onSubmit","setClientData","ɵɵdirectiveInject","i1","Router","i2","SharedDataService","selectors","decls","vars","consts","template","ClientListComponent_Template","rf","ctx","ɵɵlistener","ClientListComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ClientListComponent_div_27_Template","ɵɵproperty","ɵɵadvance","errors","touched","i3","NgIf","i4","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["/Users/nicolashaase/Desktop/Coding-Folders/Capstone1/src/app/client-list/client-list.component.ts","/Users/nicolashaase/Desktop/Coding-Folders/Capstone1/src/app/client-list/client-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators, AbstractControl, ValidationErrors, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SharedDataService } from '../shared-data.service';\n\n@Component({\n  selector: 'app-client-list',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent {\n  form: FormGroup;\nfullName: string = 'John Doe';\nemail: string = 'email@email.com';\nphone: string = '1234567890';\npassword: string = 'password';\nconfirmPassword: string = 'password';\naddress: string = '123 Main St';\ncity: string = 'Los Angeles';\nstate: string = 'California';\nzip: string = '12345';\n  // Define the form group and its controls\n\n\n  constructor(private router: Router, private sharedDataService: SharedDataService) {\n    // Initialize the form with controls and validators\n    this.form = new FormGroup(\n      {\n        fullName: new FormControl('', Validators.required),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        phone: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{10}$')]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n        confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n        address: new FormControl('', Validators.required),\n        city: new FormControl('', Validators.required),\n        state: new FormControl('', Validators.required),\n        zip: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{5}$')])\n      },\n      { validators: this.passwordMatchValidator } // Attach the custom validator\n    );\n  }\n\n  // Custom validator to check if password and confirm password match\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password')?.value;\n    const confirmPassword = control.get('confirmPassword')?.value;\n\n    return password === confirmPassword ? null : { mismatch: true };\n  }\n\n// Method to navigate to the SchedulingComponent with form data\nnavigateToScheduling(): void {\n  if (this.form.valid) {\n    this.router.navigate(['/scheduling'], { state: { data: this.form.value } });\n  } else {\n    console.log('Form is invalid. Please correct the errors.');\n  }\n}\n\n  // Method to handle form submission\n  onSubmit(): void {\n    if (this.form.valid) {\n      this.sharedDataService.setClientData(this.form.value); // Store client data\n      this.router.navigate(['/scheduling']); // Navigate to SchedulingComponent\n    } else {\n      console.log('Form is invalid. Please correct the errors.');\n    }\n  }\n}","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"container mt-5\">\n      <h1 class=\"mt-6\">Client Form:</h1>\n      <h4 class=\"mt-6\">Please fill out the form below and press submit:</h4>\n      <div class=\"row g-3\">\n        <div class=\"col-mt-6\">\n          <label for=\"fullName\" class=\"form-label\">Full Name:</label>\n          <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" id=\"fullName\" placeholder=\"Your full name\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"email\" class=\"form-label\">Email:</label>\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"youremail@email.com\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"phone\" class=\"form-label\">Phone number:</label>\n          <input type=\"number\" formControlName=\"phone\" class=\"form-control\" id=\"phone\" placeholder=\"123-456-7890\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"password\" class=\"form-label\">Enter a password:</label>\n          <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"confirmPassword\" class=\"form-label\">Confirm your password:</label>\n          <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" id=\"confirmPassword\">\n        </div>\n        <div *ngIf=\"form.errors?.['mismatch'] && form.touched\" class=\"text-danger\">\n          Passwords do not match.\n        </div>\n        <div class=\"col-mt-12\">\n          <label for=\"address\" class=\"form-label\">Address:</label>\n          <input type=\"text\" formControlName=\"address\" class=\"form-control\" id=\"address\" placeholder=\"1234 Main St\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"city\" class=\"form-label\">City:</label>\n          <input type=\"text\" formControlName=\"city\" class=\"form-control\" id=\"city\" placeholder=\"Your city\">\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"state\" class=\"form-label\">State:</label>\n          <select id=\"state\" formControlName=\"state\" class=\"form-select\">\n            <option selected>California</option>\n            <option>Alabama</option>\n            <option>Alaska</option>\n            <option>Arizona</option>\n            <option>Arkansas</option>\n            <option>Colorado</option>\n            <option>Connecticut</option>\n            <option>Delaware</option>\n            <option>Florida</option>\n            <option>Georgia</option>\n            <option>Hawaii</option>\n            <option>Idaho</option>\n            <option>Illinois</option>\n            <option>Indiana</option>\n            <option>Iowa</option>\n            <option>Kansas</option>\n            <option>Kentucky</option>\n            <option>Louisiana</option>\n            <option>Maine</option>\n            <option>Maryland</option>\n            <option>Massachusetts</option>\n            <option>Michigan</option>\n            <option>Minnesota</option>\n            <option>Mississippi</option>\n            <option>Missouri</option>\n            <option>Montana</option>\n            <option>Nebraska</option>\n            <option>Nevada</option>\n            <option>New Hampshire</option>\n            <option>New Jersey</option>\n            <option>New Mexico</option>\n            <option>New York</option>\n            <option>North Carolina</option>\n            <option>North Dakota</option>\n            <option>Ohio</option>\n            <option>Oklahoma</option>\n            <option>Oregon</option>\n            <option>Pennsylvania</option>\n            <option>Rhode Island</option>\n            <option>South Carolina</option>\n            <option>South Dakota</option>\n            <option>Tennessee</option>\n            <option>Texas</option>\n            <option>Utah</option>\n            <option>Vermont</option>\n            <option>Virginia</option>\n            <option>Washington</option>\n            <option>West Virginia</option>\n            <option>Wisconsin</option>\n            <option>Wyoming</option>\n          </select>\n        </div>\n        <div class=\"col-mt-6\">\n          <label for=\"zip\" class=\"form-label\">Zip:</label>\n          <input type=\"text\" formControlName=\"zip\" class=\"form-control\" id=\"zip\" placeholder=\"12345\">\n        </div>\n        <div class=\"col-mt-6 center-button\">\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        </div>\n      </div>\n    </div>\n  </form>"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAqCC,mBAAmB,QAAQ,gBAAgB;AAC3H,SAASC,YAAY,QAAQ,iBAAiB;;;;;;;;ICuBtCC,EAAA,CAAAC,cAAA,cAA2E;IACzED,EAAA,CAAAE,MAAA,gCACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADdd,OAAM,MAAOC,mBAAmB;EAcVC,MAAA;EAAwBC,iBAAA;EAb5CC,IAAI;EACNC,QAAQ,GAAW,UAAU;EAC7BC,KAAK,GAAW,iBAAiB;EACjCC,KAAK,GAAW,YAAY;EAC5BC,QAAQ,GAAW,UAAU;EAC7BC,eAAe,GAAW,UAAU;EACpCC,OAAO,GAAW,aAAa;EAC/BC,IAAI,GAAW,aAAa;EAC5BC,KAAK,GAAW,YAAY;EAC5BC,GAAG,GAAW,OAAO;EACnB;EAGAC,YAAoBZ,MAAc,EAAUC,iBAAoC;IAA5D,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAC3D;IACA,IAAI,CAACC,IAAI,GAAG,IAAIX,SAAS,CACvB;MACEY,QAAQ,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACqB,QAAQ,CAAC;MAClDT,KAAK,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACY,KAAK,CAAC,CAAC;MACnEC,KAAK,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACsB,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;MACpFR,QAAQ,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7ER,eAAe,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACpFP,OAAO,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACqB,QAAQ,CAAC;MACjDJ,IAAI,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACqB,QAAQ,CAAC;MAC9CH,KAAK,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACqB,QAAQ,CAAC;MAC/CF,GAAG,EAAE,IAAIrB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACsB,OAAO,CAAC,YAAY,CAAC,CAAC;KACjF,EACD;MAAEE,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;KAC7C;EACH;EAEA;EACAA,sBAAsBA,CAACC,OAAwB;IAC7C,MAAMZ,QAAQ,GAAGY,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IAC/C,MAAMb,eAAe,GAAGW,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK;IAE7D,OAAOd,QAAQ,KAAKC,eAAe,GAAG,IAAI,GAAG;MAAEc,QAAQ,EAAE;IAAI,CAAE;EACjE;EAEF;EACAC,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE;MACnB,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;QAAEd,KAAK,EAAE;UAAEe,IAAI,EAAE,IAAI,CAACvB,IAAI,CAACkB;QAAK;MAAE,CAAE,CAAC;IAC7E,CAAC,MAAM;MACLM,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC5D;EACF;EAEE;EACAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAAC1B,IAAI,CAACqB,KAAK,EAAE;MACnB,IAAI,CAACtB,iBAAiB,CAAC4B,aAAa,CAAC,IAAI,CAAC3B,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAC;MACvD,IAAI,CAACpB,MAAM,CAACwB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC5D;EACF;;qCAzDW5B,mBAAmB,EAAAJ,EAAA,CAAAmC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAArC,EAAA,CAAAmC,iBAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;;UAAnBnC,mBAAmB;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCbhC9C,EAAA,CAAAC,cAAA,cAAiD;QAAxBD,EAAA,CAAAgD,UAAA,sBAAAC,sDAAA;UAAA,OAAYF,GAAA,CAAAd,QAAA,EAAU;QAAA,EAAC;QAE1CjC,EADF,CAAAC,cAAA,aAA4B,YACT;QAAAD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClCH,EAAA,CAAAC,cAAA,YAAiB;QAAAD,EAAA,CAAAE,MAAA,uDAAgD;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGlEH,EAFJ,CAAAC,cAAA,aAAqB,aACG,eACqB;QAAAD,EAAA,CAAAE,MAAA,iBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3DH,EAAA,CAAAkD,SAAA,gBAA8G;QAChHlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,gBACkB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACpDH,EAAA,CAAAkD,SAAA,gBAA8G;QAChHlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,gBACkB;QAAAD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3DH,EAAA,CAAAkD,SAAA,iBAAwG;QAC1GlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,iBACqB;QAAAD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAClEH,EAAA,CAAAkD,SAAA,iBAAqF;QACvFlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,iBAC4B;QAAAD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC9EH,EAAA,CAAAkD,SAAA,iBAAmG;QACrGlD,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAmD,UAAA,KAAAC,mCAAA,kBAA2E;QAIzEpD,EADF,CAAAC,cAAA,eAAuB,iBACmB;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxDH,EAAA,CAAAkD,SAAA,iBAA0G;QAC5GlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,iBACiB;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAClDH,EAAA,CAAAkD,SAAA,iBAAiG;QACnGlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,cAAsB,iBACkB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAElDH,EADF,CAAAC,cAAA,kBAA+D,kBAC5C;QAAAD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACpCH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACvBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACvBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACvBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC1BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC9BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC1BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACvBH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC9BH,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,mBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,iBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,uBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC/BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,aAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,iBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,eAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACvBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,uBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC/BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,qBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,kBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC1BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,cAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,aAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,iBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzBH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,mBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,sBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC9BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,kBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC1BH,EAAA,CAAAC,cAAA,eAAQ;QAAAD,EAAA,CAAAE,MAAA,gBAAO;QAEnBF,EAFmB,CAAAG,YAAA,EAAS,EACjB,EACL;QAEJH,EADF,CAAAC,cAAA,eAAsB,kBACgB;QAAAD,EAAA,CAAAE,MAAA,aAAI;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChDH,EAAA,CAAAkD,SAAA,kBAA2F;QAC7FlD,EAAA,CAAAG,YAAA,EAAM;QAEJH,EADF,CAAAC,cAAA,gBAAoC,mBACY;QAAAD,EAAA,CAAAE,MAAA,eAAM;QAI5DF,EAJ4D,CAAAG,YAAA,EAAS,EACzD,EACF,EACF,EACD;;;QApGHH,EAAA,CAAAqD,UAAA,cAAAN,GAAA,CAAAxC,IAAA,CAAkB;QAyBVP,EAAA,CAAAsD,SAAA,IAA+C;QAA/CtD,EAAA,CAAAqD,UAAA,UAAAN,GAAA,CAAAxC,IAAA,CAAAgD,MAAA,kBAAAR,GAAA,CAAAxC,IAAA,CAAAgD,MAAA,iBAAAR,GAAA,CAAAxC,IAAA,CAAAiD,OAAA,CAA+C;;;mBDhBjDzD,YAAY,EAAA0D,EAAA,CAAAC,IAAA,EAAE5D,mBAAmB,EAAA6D,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,uBAAA,EAAAH,EAAA,CAAAI,oBAAA,EAAAJ,EAAA,CAAAK,mBAAA,EAAAL,EAAA,CAAAM,0BAAA,EAAAN,EAAA,CAAAO,eAAA,EAAAP,EAAA,CAAAQ,oBAAA,EAAAR,EAAA,CAAAS,kBAAA,EAAAT,EAAA,CAAAU,eAAA;IAAAC,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}